{"remainingRequest":"/home/kubanychbek/Desktop/code/todo/frontend/test-app/node_modules/babel-loader/lib/index.js!/home/kubanychbek/Desktop/code/todo/frontend/test-app/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/kubanychbek/Desktop/code/todo/frontend/test-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/kubanychbek/Desktop/code/todo/frontend/test-app/src/components/TodoList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/kubanychbek/Desktop/code/todo/frontend/test-app/src/components/TodoList.vue","mtime":1636824501790},{"path":"/home/kubanychbek/Desktop/code/todo/frontend/test-app/babel.config.js","mtime":1636779951204},{"path":"/home/kubanychbek/Desktop/code/todo/frontend/test-app/node_modules/cache-loader/dist/cjs.js","mtime":1636779947480},{"path":"/home/kubanychbek/Desktop/code/todo/frontend/test-app/node_modules/babel-loader/lib/index.js","mtime":1636779947508},{"path":"/home/kubanychbek/Desktop/code/todo/frontend/test-app/node_modules/cache-loader/dist/cjs.js","mtime":1636779947480},{"path":"/home/kubanychbek/Desktop/code/todo/frontend/test-app/node_modules/vue-loader/lib/index.js","mtime":1636779945775}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFRvRG9JdGVtIGZyb20gJy4vVG9Eb0l0ZW0udnVlJzsKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdUb0RvTGlzdCcsCiAgcHJvcHM6IHsKICAgIGVycm9yTWVzc2FnZTogU3RyaW5nLAogICAgdGFza3M6IEFycmF5LAogICAgdXBkYXRlVGFzazogRnVuY3Rpb24KICB9LAogIGNvbXBvbmVudHM6IHsKICAgIFRvRG9JdGVtOiBUb0RvSXRlbQogIH0sCiAgbWV0aG9kczogewogICAgZGVsZXRlVGFzazogZnVuY3Rpb24gZGVsZXRlVGFzayhpbmRleCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgYXhpb3MuZGVsZXRlKHRoaXMuJGFwaVVybCArICd0b2RvLycgKyB0aGlzLnRhc2tzW2luZGV4XS5pZCkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSAyMDAgJiYgcmVzcG9uc2UuZGF0YS5zdWNjZXNzID09PSB0cnVlKSB7CiAgICAgICAgICBfdGhpcy50YXNrcy5zcGxpY2UoaW5kZXgsIDEpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBfdGhpcy5lcnJvck1lc3NhZ2UgPSAiU29tZXRoaW5nIHdlbnQgd3JvbmciOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["TodoList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuBA,OAAA,QAAA,MAAA,gBAAA;AACA,OAAA,KAAA,MAAA,OAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,YAAA,EAAA,MADA;AAEA,IAAA,KAAA,EAAA,KAFA;AAGA,IAAA,UAAA,EAAA;AAHA,GAFA;AAQA,EAAA,UAAA,EAAA;AACA,IAAA,QAAA,EAAA;AADA,GARA;AAYA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,sBACA,KADA,EACA;AAAA;;AACA,MAAA,KAAA,CAAA,MAAA,CAAA,KAAA,OAAA,GAAA,OAAA,GAAA,KAAA,KAAA,CAAA,KAAA,EAAA,EAAA,EACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,YAAA,QAAA,CAAA,MAAA,KAAA,GAAA,IAAA,QAAA,CAAA,IAAA,CAAA,OAAA,KAAA,IAAA,EAAA;AACA,UAAA,KAAA,CAAA,KAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA;AACA,SAFA,MAEA;AACA,UAAA,KAAA,CAAA,YAAA,GAAA,sBAAA;AACA;AACA,OAPA;AAQA;AAVA;AAZA,CAAA","sourcesContent":["<template>\n    <table class=\"table table-boarded mt-5\" v-if=\"this.tasks.length > 0\" >\n        <thead>\n            <th scope=\"col\">Task</th>\n            <th scope=\"col\">Completed</th>\n            <th scope=\"col\">dueDate</th>\n            <th scope=\"col text-center\">Edit</th>\n            <th scope=\"col text-center\">Delete</th>\n        </thead>\n        <tbody>\n            <ToDoItem\n                v-for=\"(task, index) in this.tasks\" \n                :key=\"task.id\"\n                :index=\"index\"\n                :task=\"task\"\n                :deleteTask=\"() => deleteTask(index)\"\n                :updateTask=\"updateTask\"\n            />\n        </tbody>\n    </table>\n    <h2 v-else class=\"mt-5\">You don't have any tasks</h2>\n</template>\n<script>\nimport ToDoItem from './ToDoItem.vue';\nimport axios from 'axios';\nexport default {\n    name: 'ToDoList',\n    props: {\n        errorMessage: String,\n        tasks: Array,\n        updateTask: Function,\n    },\n\n    components: {\n        ToDoItem\n    },\n\n    methods: {\n        deleteTask(index) {\n            axios.delete(this.$apiUrl + 'todo/' + this.tasks[index].id)\n            .then( response => {\n                if (response.status === 200 && response.data.success === true) {\n                    this.tasks.splice(index, 1);\n                } else {\n                    this.errorMessage = \"Something went wrong\";\n                }\n            });\n        }\n    },\n    \n    \n};\n</script>\n"],"sourceRoot":"src/components"}]}