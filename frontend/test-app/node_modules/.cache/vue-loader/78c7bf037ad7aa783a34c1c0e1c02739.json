{"remainingRequest":"/home/kubanychbek/Desktop/code/todo/frontend/test-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/kubanychbek/Desktop/code/todo/frontend/test-app/src/components/ToDoItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/kubanychbek/Desktop/code/todo/frontend/test-app/src/components/ToDoItem.vue","mtime":1636828007656},{"path":"/home/kubanychbek/Desktop/code/todo/frontend/test-app/node_modules/cache-loader/dist/cjs.js","mtime":1636779947480},{"path":"/home/kubanychbek/Desktop/code/todo/frontend/test-app/node_modules/babel-loader/lib/index.js","mtime":1636779947508},{"path":"/home/kubanychbek/Desktop/code/todo/frontend/test-app/node_modules/cache-loader/dist/cjs.js","mtime":1636779947480},{"path":"/home/kubanychbek/Desktop/code/todo/frontend/test-app/node_modules/vue-loader/lib/index.js","mtime":1636779945775}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CiAgICBleHBvcnQgZGVmYXVsdCB7CiAgICAgICAgbmFtZTogJ1RvRG9JdGVtJywKICAgICAgICBwcm9wczogewogICAgICAgICAgICB0YXNrOiBPYmplY3QsCiAgICAgICAgICAgIGRlbGV0ZVRhc2s6IEZ1bmN0aW9uLAogICAgICAgICAgICB1cGRhdGVUYXNrOiBGdW5jdGlvbiwKICAgICAgICAgICAgaW5kZXg6IE51bWJlcgogICAgICAgIH0sCiAgICAgICAgbWV0aG9kczogewogICAgICAgICAgICBjb21wbGV0ZVRhc2soZSkgewogICAgICAgICAgICAgICAgY29uc3Qgc3RhdHVzID0gZS50YXJnZXQudmFsdWUgPyB0cnVlIDogZmFsc2U7CiAgICAgICAgICAgICAgICBjb25zdCBkYXRhID0gey4uLnRoaXMudGFzaywgc3RhdHVzfTsKICAgICAgICAgICAgICAgIGF4aW9zLnB1dCh0aGlzLiRhcGlVcmwgKyAndG9kby8nICsgdGhpcy50YXNrLmlkLCBkYXRhKQogICAgICAgICAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgICAgICAgICAgICAgIGlmKHJlc3BvbnNlLnN0YXR1cyA9PSAyMDApIHsKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy50YXNrLmNvbXBsZXRlZCA9IHJlc3BvbnNlLmRhdGEudG9kby5jb21wbGV0ZWQKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KS5jYXRjaCgoKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgYWxlcnQoIk9vcHMgc29tZXRoaW5nIHdlbnQgd3Jvbmcgd2hpbGUgY29tcGxldGluZyBhIHRhc2suIFRyeSBhZ2FpbiBwbGVhc2UiKTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQo="},{"version":3,"sources":["ToDoItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ToDoItem.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <tr>\n        <td>{{ task.title }}</td>\n        <td>\n            {{ task.body }}\n        </td>\n        <td>\n            {{ task.due_date }}\n        </td>\n        <td>\n           <input type=\"checkbox\" name=\"status\" :checked=\"task.completed\" value=\"1\" @change=\"completeTask\">\n        </td>\n        <td>\n        <a @click=\"updateTask({...task, index: index, status: task.completed})\">\n            <span class=\"fa fa-pen\"></span>\n        </a>\n        </td>\n        <td>\n        <a @click=\"deleteTask()\">\n            <span class=\"fa fa-trash\"></span>\n        </a>\n        </td>\n    </tr> \n</template>\n\n<script>\nimport axios from 'axios';\n    export default {\n        name: 'ToDoItem',\n        props: {\n            task: Object,\n            deleteTask: Function,\n            updateTask: Function,\n            index: Number\n        },\n        methods: {\n            completeTask(e) {\n                const status = e.target.value ? true : false;\n                const data = {...this.task, status};\n                axios.put(this.$apiUrl + 'todo/' + this.task.id, data)\n                .then(response => {\n                    if(response.status == 200) {\n                        this.task.completed = response.data.todo.completed\n                    }\n                }).catch(() => {\n                    alert(\"Oops something went wrong while completing a task. Try again please\");\n                });\n            }\n        }\n    }\n</script>"]}]}